{"version":3,"sources":["fields.json","product_chooser.js"],"names":["module","exports","field","value","excl_attrs","metal","excl_fields","width","carat","selections","ring_type","style","field_pfx","Object","keys","fields","reduce","tally","field_name","field_id","split","assembleUrl","arr","filter","Boolean","url","join","setHiddenOptions","selected","excluded","forEach","entry","push","Set","flat","elem","document","getElementById","hidden","includes","excluded_pfx","pfx","section","updateUrlData","elem_details","id","affected_field","undefined","attrib","excl","setFinaliseUrl","validUrl","res","key","associated_section","btn","href","getImageSrc","imageUrl","updateImageSrc","elem_image","img_src","src","srcset","updateImages","getElementsByClassName","selector","skipToNextSection","event","target","current_section","closest","next_section","display","nextElementSibling","initialHide","sects","setSpecText","innerHTML","setSpecImage","updateSpec","addEventListener","onclick","preventDefault"],"mappings":"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","file":"product_chooser.js","sourceRoot":"..","sourcesContent":["module.exports={\"ring-plain\":{field:\"ring_type\",value:\"plain-shaped\"},\"ring-diamond\":{field:\"ring_type\",value:\"gem-set\"},\"carat-9\":{field:\"carat\",value:\"9ct\",excl_attrs:{metal:[\"titanium\",\"platinum\"]},excl_fields:[\"metal-titanium\",\"metal-platinum\"]},\"carat-18\":{field:\"carat\",value:\"18ct\",excl_attrs:{metal:[\"titanium\",\"platinum\"]},excl_fields:[\"metal-titanium\",\"metal-platinum\"]},\"style-flat\":{field:\"style\",value:\"flat\"},\"style-easyfit\":{field:\"style\",value:\"easy-fit\"},\"style-court\":{field:\"style\",value:\"court\"},\"style-dshape\":{field:\"style\",value:\"d-shape\"},\"width-2\":{field:\"width\",value:\"2mm\",excl_attrs:{metal:[\"titanium\"]},excl_fields:[\"metal-titanium\"]},\"width-2.5\":{field:\"width\",value:\"2-5mm\",excl_attrs:{metal:[\"rose-gold\",\"titanium\"]},excl_fields:[\"metal-titanium\",\"metal-rosegold\"]},\"width-3\":{field:\"width\",value:\"3mm\",excl_attrs:{metal:[\"titanium\"]},excl_fields:[\"metal-titanium\"]},\"width-4\":{field:\"width\",value:\"4mm\"},\"width-5\":{field:\"width\",value:\"5mm\"},\"width-6\":{field:\"width\",value:\"6mm\",excl_attrs:{metal:[\"rose-gold\"]},excl_fields:[\"metal-rosegold\"]},\"width-8\":{field:\"width\",value:\"8mm\",excl_attrs:{metal:[\"rose-gold\"]},excl_fields:[\"metal-rosegold\"]},\"metal-yellowgold\":{field:\"metal\",value:\"yellow-gold\"},\"metal-rosegold\":{field:\"metal\",value:\"rose-gold\",excl_attrs:{width:[\"6mm\",\"8mm\",\"2.5mm\"]},excl_fields:[\"width-6\",\"width-8\",\"width-2.5\"]},\"metal-whitegold\":{field:\"metal\",value:\"white-gold\"},\"metal-platinum\":{field:\"metal\",value:\"platinum\",excl_attrs:{carat:[\"9ct\",\"18ct\"]},excl_fields:[\"carat-9\",\"carat-18\"]},\"metal-titanium\":{field:\"metal\",value:\"titanium\",excl_attrs:{width:[\"2mm\",\"2.5mm\",\"3mm\"],carat:[\"9ct\",\"18ct\"]},excl_fields:[\"carat-9\",\"carat-18\",\"width-2\",\"width-2.5\",\"width-3\"]}};","import fields from './fields.json';\n\n// Object representing the current state of selections\n// the user has made\nlet selections = {\n  ring_type: \"ring-plain\",\n  carat: null,\n  width: null,\n  metal: null,\n  style: null,\n};\n\nconst field_pfx = Object.keys(fields).reduce((tally, field_name) => {\n  let field_id = field_name.split(\"-\")[0];\n  tally[field_id] = (tally[field_id] || 0) + 1;\n  return tally;\n}, {});\n\nconst assembleUrl = () => {\n  // Fetch the pieces we want from the selections object; anything we don't want\n  // will be null or undefined, and will be removed by the filter\n  let arr = [\n    fields[selections.carat]?.value,\n    fields[selections.width]?.value,\n    fields[selections.metal]?.value,\n    fields[selections.style]?.value,\n    \"wedding-ring\",\n  ].filter(Boolean)\n\n  // Construct the URL by joining the components\n  url = arr.join(\"-\")\n};\n\nconst setHiddenOptions = () => {\n  let selected = [\n    selections.carat,\n    selections.width,\n    selections.style,\n    selections.metal\n  ].filter(Boolean);\n  let excluded = []\n\n  // Push all excluded element ID sets\n  selected.forEach((entry) => { excluded.push(fields[entry][\"excl_fields\"]) })\n\n  // Deduplicate\n  excluded = new Set(excluded.flat().filter(Boolean));\n  excluded = [...excluded];\n\n  // Get the names of all the option fields\n  const available_fields = Object.keys(fields);\n\n  // Hide anything to exclude, reveal anything otherwise\n  available_fields.forEach((field_id) => {\n    let elem = document.getElementById(field_id);\n    if (elem) {\n      elem.hidden = excluded.includes(field_id);\n    };\n  });\n\n  const excluded_pfx = excluded.reduce((tally, field_name) => {\n    let field_id = field_name.split(\"-\")[0];\n    tally[field_id] = (tally[field_id] || 0) + 1;\n    return tally;\n  }, {});\n\n  Object.keys(selections).forEach((pfx) => {\n    let section = document.getElementById(pfx + '-option-section');\n    if (section) {\n      section.hidden = (excluded_pfx[pfx] === field_pfx[pfx]);\n    }\n  });\n};\n\nconst updateUrlData = (elem) => {\n  // Find the appropriate content in the appropriate map for this element\n  const elem_details = fields[elem.id]\n\n  // Fetch the field to update and the value to set it to\n  const affected_field = elem_details[\"field\"];\n\n  // Set attributes of selections object\n  if (selections[affected_field] === elem.id) {\n    selections[affected_field] = null;\n\n    // We don't need to un-null any other fields, since by deselecting an element\n    // we're always increasing the options available.\n  } else {\n    selections[affected_field] = elem.id;\n\n    // Erase attributes that are impossible (e.g. carat)\n    if (elem_details.excl_attrs !== undefined) {\n      Object.keys(selections).forEach((attrib) => {\n        excl = elem_details.excl_fields\n\n        // If there are excl_attrs for this attribute, and the current selection for this attribute\n        // is in those excl_attrs, null that selection so it won't be included in the URL\n        if (excl !== undefined && excl.includes(selections[attrib])) {\n          selections[attrib] = null\n        }\n      });\n    }\n  };\n\n  setHiddenOptions();\n  assembleUrl();\n  setFinaliseUrl();\n};\n\nconst validUrl = () => {\n  let res = true;\n\n  Object.keys(selections).forEach((key) => {\n    let associated_section = document.getElementById(key + '-option-section');\n    // If the key is null but the section is not hidden,\n    // we're missing an attribute\n    if (!selections[key] && associated_section && !associated_section.hidden) {\n      res = false\n    };\n  });\n\n  return res\n};\n\n// The \"finalise\" button takes the user to the relevant product page\nconst setFinaliseUrl = () => {\n  let btn = document.getElementById('finalise_ring');\n\n  if (validUrl()) {\n    btn.href = \"/product/\" + url;\n  } else {\n    btn.href = \"#\";\n  };\n};\n\nconst getImageSrc = (elem) => {\n  // Find the appropriate content in the appropriate map for this element\n  const elem_details = fields[elem.id];\n\n  if (elem_details === undefined) {\n    return\n  }\n\n  // Fetch the field to update and the value to set it to\n  const affected_field = elem_details[\"field\"];\n\n  // Use the image which considers the rest of the current selection,\n  // with the value which this option would set overridden.\n  let selected = [\n    affected_field === \"style\" ? elem_details.value : (fields[selections.style]?.value || \"court\"),\n    affected_field === \"metal\" ? elem_details.value : (fields[selections.metal]?.value || \"yellow-gold\"),\n    affected_field === \"width\" ? elem_details.value : (fields[selections.width]?.value || \"4mm\")\n  ];\n\n  return imageUrl(selected.join(\"-\"));\n};\n\n// For a given element, fetch its child image and update the src attribute\nconst updateImageSrc = (elem) => {\n  const elem_image = document.getElementById(elem.id + \"-image\");\n  const img_src = getImageSrc(elem);\n\n  // Some things, such as the carat, don't have mutable images.\n  // For those, img_src will be blank, so the relevant image\n  // will not be updated.\n  if (elem_image && img_src) {\n    elem_image.src = img_src;\n    elem_image.srcset = \"\";\n  }\n}\n\n// Get all attribute selectors, find their images and update\n// them to use the latest selections or defaults.\nconst updateImages = () => {\n  [...document.getElementsByClassName('ring-attribute-selector')].forEach((selector) => {\n    updateImageSrc(selector);\n  })\n};\n\nconst skipToNextSection = (event) => {\n  // Do nothing if no selection has been made\n  if ([null, undefined].includes(selections[event.target.id.split(\"-\")[0]])) {\n    return\n  };\n\n  // Hide this section.\n  const current_section = event.target.closest(\".et_pb_section\")\n  current_section.style.display = \"none\";\n\n  // Open the next valid (i.e. not hidden) section.\n  next_section = current_section.nextElementSibling\n  while (next_section.hidden) {\n    next_section = next_section.nextElementSibling\n  };\n  next_section.style.display = \"block\";\n}\n\nconst initialHide = () => {\n  let sects = Object.keys(selections);\n  sects.push(\"spec\");\n  sects.forEach((pfx) => {\n    if (pfx === \"metal\") {\n      return\n    };\n\n    let section = document.getElementById(pfx + '-option-section');\n    if (section) {\n      section.style.display = \"none\";\n    }\n  });\n}\n\nconst setSpecText = (carat, metal, style, width) => {\n  const target = document.getElementById('spec-text');\n  target.innerHTML = `Your chosen ring is a ${carat ? carat + ' ' : ''}${metal} ${style} wedding ring with a finger width of ${width}.`\n}\n\nconst setSpecImage = (metal, style, width) => {\n  const target = document.getElementById('spec-image');\n  let selected = [\n    style || \"court\",\n    metal || \"yellow-gold\",\n    width || \"4mm\"\n  ];\n\n  target.src = imageUrl(selected.join(\"-\"));\n  target.srcset = \"\";\n}\n\nconst imageUrl = (key) => {\n  return \"/wp-content/uploads/2020/08/\" + key + \".jpg\";\n}\n\nconst updateSpec = () => {\n  const carat = fields[selections.carat]?.value;\n  const metal = fields[selections.metal]?.value;\n  const style = fields[selections.style]?.value;\n  const width = fields[selections.width]?.value;\n\n  setSpecText(carat, metal, style, width);\n  setSpecImage(metal, style, width);\n}\n\n// Initially, the URL is invalid and so we just link to '#'.\nlet url = '#';\n\n// Entrypoint for the product chooser logic\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  [...document.getElementsByClassName('ring-attribute-selector')].forEach((selector) => {\n    selector.onclick = () => {\n      updateUrlData(selector);\n      updateImages();\n      updateSpec();\n    }\n  });\n\n  [...document.getElementsByClassName('next-button')].forEach((btn) => {\n    btn.onclick = (event) => {\n      // Avoid page refresh\n      event.preventDefault();\n\n      skipToNextSection(event);\n    };\n  });\n\n  initialHide();\n  setHiddenOptions();\n  assembleUrl();\n});\n"]}