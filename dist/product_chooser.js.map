{"version":3,"sources":["product_fields.js","product_chooser.js"],"names":["fields","field","value","excl_attrs","excl_fields","selections","ring_type","carat","width","metal","style","field_pfx","Object","keys","reduce","tally","field_name","field_id","split","assembleUrl","arr","filter","Boolean","url","join","setHiddenOptions","selected","excluded","forEach","entry","push","Set","flat","elem","document","getElementById","hidden","includes","excluded_pfx","pfx","section","updateUrlData","elem_details","id","affected_field","undefined","attrib","excl","setFinaliseUrl","validUrl","res","key","associated_section","btn","href","getImageSrc","imageUrl","updateImageSrc","elem_image","img_src","src","srcset","updateImages","getElementsByClassName","selector","skipToNextSection","event","target","current_section","closest","next_section","display","nextElementSibling","initialHide","sects","setSpecText","innerHTML","setSpecImage","updateSpec","addEventListener","onclick","preventDefault"],"mappings":"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","file":"product_chooser.js","sourceRoot":"..","sourcesContent":["const fields = {\n  \"ring-plain\": {\n    field: \"ring_type\",\n    value: \"plain-shaped\"\n  },\n  \"ring-diamond\": {\n    field: \"ring_type\",\n    value: \"gem-set\"\n  },\n  \"carat-9\": {\n    field: \"carat\",\n    value: \"9ct\",\n    excl_attrs: {\n      \"metal\": [\"titanium\", \"platinum\"]\n    },\n    excl_fields: [\n      \"metal-titanium\", \"metal-platinum\"\n    ]\n  },\n  \"carat-18\": {\n    field: \"carat\",\n    value: \"18ct\",\n    excl_attrs: {\n      \"metal\": [\"titanium\", \"platinum\"]\n    },\n    excl_fields: [\n      \"metal-titanium\",\n      \"metal-platinum\",\n    ]\n  },\n  \"style-flat\": {\n    field: \"style\",\n    value: \"flat\",\n  },\n  \"style-easyfit\": {\n    field: \"style\",\n    value: \"easy-fit\",\n  },\n  \"style-court\": {\n    field: \"style\",\n    value: \"court\",\n  },\n  \"style-dshape\": {\n    field: \"style\",\n    value: \"d-shape\",\n  },\n  \"width-2\": {\n    field: \"width\",\n    value: \"2mm\",\n    excl_attrs: {\n      \"metal\": [\"titanium\"]\n    },\n    excl_fields: [\n      \"metal-titanium\"\n    ]\n  },\n  \"width-2.5\": {\n    field: \"width\",\n    value: \"2-5mm\",\n    excl_attrs: {\n      \"metal\": [\"rose-gold\", \"titanium\"]\n    },\n    excl_fields: [\n      \"metal-titanium\",\n      \"metal-rosegold\",\n    ]\n  },\n  \"width-3\": {\n    field: \"width\",\n    value: \"3mm\",\n    excl_attrs: {\n      \"metal\": [\"titanium\"]\n    },\n    excl_fields: [\n      \"metal-titanium\"\n    ]\n  },\n  \"width-4\": {\n    field: \"width\",\n    value: \"4mm\",\n  },\n  \"width-5\": {\n    field: \"width\",\n    value: \"5mm\",\n  },\n  \"width-6\": {\n    field: \"width\",\n    value: \"6mm\",\n    excl_attrs: {\n      \"metal\": [\"rose-gold\"]\n    },\n    excl_fields: [\n      \"metal-rosegold\"\n    ]\n  },\n  \"width-8\": {\n    field: \"width\",\n    value: \"8mm\",\n    excl_attrs: {\n      \"metal\": [\"rose-gold\"]\n    },\n    excl_fields: [\n      \"metal-rosegold\"\n    ]\n  },\n  \"metal-yellowgold\": {\n    field: \"metal\",\n    value: \"yellow-gold\"\n  },\n  \"metal-rosegold\": {\n    field: \"metal\",\n    value: \"rose-gold\",\n    excl_attrs: {\n      \"width\": [\"6mm\", \"8mm\", \"2.5mm\"]\n    },\n    excl_fields: [\n      \"width-6\",\n      \"width-8\",\n      \"width-2.5\"\n    ]\n  },\n  \"metal-whitegold\": {\n    field: \"metal\",\n    value: \"white-gold\"\n  },\n  \"metal-platinum\": {\n    field: \"metal\",\n    value: \"platinum\",\n    excl_attrs: {\n      \"carat\": [\"9ct\", \"18ct\"]\n    },\n    excl_fields: [\n      \"carat-9\", \"carat-18\"\n    ]\n  },\n  \"metal-titanium\": {\n    field: \"metal\",\n    value: \"titanium\",\n    excl_attrs: {\n      \"width\": [\"2mm\", \"2.5mm\", \"3mm\"],\n      \"carat\": [\"9ct\", \"18ct\"]\n    },\n    excl_fields: [\n      \"carat-9\", \"carat-18\", \"width-2\", \"width-2.5\", \"width-3\"\n    ]\n  }\n};\n\nexport { fields };\n","import { fields } from './product_fields';\n\n// Object representing the current state of selections\n// the user has made\nlet selections = {\n  ring_type: \"ring-plain\",\n  carat: null,\n  width: null,\n  metal: null,\n  style: null,\n};\n\nconst field_pfx = Object.keys(fields).reduce((tally, field_name) => {\n  let field_id = field_name.split(\"-\")[0];\n  tally[field_id] = (tally[field_id] || 0) + 1;\n  return tally;\n}, {});\n\nconst assembleUrl = () => {\n  // Fetch the pieces we want from the selections object; anything we don't want\n  // will be null or undefined, and will be removed by the filter\n  let arr = [\n    fields[selections.carat]?.value,\n    fields[selections.width]?.value,\n    fields[selections.metal]?.value,\n    fields[selections.style]?.value,\n    \"wedding-ring\",\n  ].filter(Boolean)\n\n  // Construct the URL by joining the components\n  url = arr.join(\"-\")\n};\n\nconst setHiddenOptions = () => {\n  let selected = [\n    selections.carat,\n    selections.width,\n    selections.style,\n    selections.metal\n  ].filter(Boolean);\n  let excluded = []\n\n  // Push all excluded element ID sets\n  selected.forEach((entry) => { excluded.push(fields[entry][\"excl_fields\"]) })\n\n  // Deduplicate\n  excluded = new Set(excluded.flat().filter(Boolean));\n  excluded = [...excluded];\n\n  // Get the names of all the option fields\n  const available_fields = Object.keys(fields);\n\n  // Hide anything to exclude, reveal anything otherwise\n  available_fields.forEach((field_id) => {\n    let elem = document.getElementById(field_id);\n    if (elem) {\n      elem.hidden = excluded.includes(field_id);\n    };\n  });\n\n  const excluded_pfx = excluded.reduce((tally, field_name) => {\n    let field_id = field_name.split(\"-\")[0];\n    tally[field_id] = (tally[field_id] || 0) + 1;\n    return tally;\n  }, {});\n\n  Object.keys(selections).forEach((pfx) => {\n    let section = document.getElementById(pfx + '-option-section');\n    if (section) {\n      section.hidden = (excluded_pfx[pfx] === field_pfx[pfx]);\n    }\n  });\n};\n\nconst updateUrlData = (elem) => {\n  // Find the appropriate content in the appropriate map for this element\n  const elem_details = fields[elem.id]\n\n  // Fetch the field to update and the value to set it to\n  const affected_field = elem_details[\"field\"];\n\n  // Set attributes of selections object\n  if (selections[affected_field] === elem.id) {\n    selections[affected_field] = null;\n\n    // We don't need to un-null any other fields, since by deselecting an element\n    // we're always increasing the options available.\n  } else {\n    selections[affected_field] = elem.id;\n\n    // Erase attributes that are impossible (e.g. carat)\n    if (elem_details.excl_attrs !== undefined) {\n      Object.keys(selections).forEach((attrib) => {\n        excl = elem_details.excl_fields\n\n        // If there are excl_attrs for this attribute, and the current selection for this attribute\n        // is in those excl_attrs, null that selection so it won't be included in the URL\n        if (excl !== undefined && excl.includes(selections[attrib])) {\n          selections[attrib] = null\n        }\n      });\n    }\n  };\n\n  setHiddenOptions();\n  assembleUrl();\n  setFinaliseUrl();\n};\n\nconst validUrl = () => {\n  let res = true;\n\n  Object.keys(selections).forEach((key) => {\n    let associated_section = document.getElementById(key + '-option-section');\n    // If the key is null but the section is not hidden,\n    // we're missing an attribute\n    if (!selections[key] && associated_section && !associated_section.hidden) {\n      res = false\n    };\n  });\n\n  return res\n};\n\n// The \"finalise\" button takes the user to the relevant product page\nconst setFinaliseUrl = () => {\n  let btn = document.getElementById('finalise_ring');\n\n  if (validUrl()) {\n    btn.href = \"/product/\" + url;\n  } else {\n    btn.href = \"#\";\n  };\n};\n\nconst getImageSrc = (elem) => {\n  // Find the appropriate content in the appropriate map for this element\n  const elem_details = fields[elem.id];\n\n  if (elem_details === undefined) {\n    return\n  }\n\n  // Fetch the field to update and the value to set it to\n  const affected_field = elem_details[\"field\"];\n\n  // Use the image which considers the rest of the current selection,\n  // with the value which this option would set overridden.\n  let selected = [\n    affected_field === \"style\" ? elem_details.value : (fields[selections.style]?.value || \"court\"),\n    affected_field === \"metal\" ? elem_details.value : (fields[selections.metal]?.value || \"yellow-gold\"),\n    affected_field === \"width\" ? elem_details.value : (fields[selections.width]?.value || \"4mm\")\n  ];\n\n  return imageUrl(selected.join(\"-\"));\n};\n\n// For a given element, fetch its child image and update the src attribute\nconst updateImageSrc = (elem) => {\n  const elem_image = document.getElementById(elem.id + \"-image\");\n  const img_src = getImageSrc(elem);\n\n  // Some things, such as the carat, don't have mutable images.\n  // For those, img_src will be blank, so the relevant image\n  // will not be updated.\n  if (elem_image && img_src) {\n    elem_image.src = img_src;\n    elem_image.srcset = \"\";\n  }\n}\n\n// Get all attribute selectors, find their images and update\n// them to use the latest selections or defaults.\nconst updateImages = () => {\n  [...document.getElementsByClassName('ring-attribute-selector')].forEach((selector) => {\n    updateImageSrc(selector);\n  })\n};\n\nconst skipToNextSection = (event) => {\n  // Do nothing if no selection has been made\n  if ([null, undefined].includes(selections[event.target.id.split(\"-\")[0]])) {\n    return\n  };\n\n  // Hide this section.\n  const current_section = event.target.closest(\".et_pb_section\")\n  current_section.style.display = \"none\";\n\n  // Open the next valid (i.e. not hidden) section.\n  next_section = current_section.nextElementSibling\n  while (next_section.hidden) {\n    next_section = next_section.nextElementSibling\n  };\n  next_section.style.display = \"block\";\n}\n\nconst initialHide = () => {\n  let sects = Object.keys(selections);\n  sects.push(\"spec\");\n  sects.forEach((pfx) => {\n    if (pfx === \"metal\") {\n      return\n    };\n\n    let section = document.getElementById(pfx + '-option-section');\n    if (section) {\n      section.style.display = \"none\";\n    }\n  });\n}\n\nconst setSpecText = (carat, metal, style, width) => {\n  const target = document.getElementById('spec-text');\n  target.innerHTML = `Your chosen ring is a ${carat ? carat + ' ' : ''}${metal} ${style} wedding ring with a finger width of ${width}.`\n}\n\nconst setSpecImage = (metal, style, width) => {\n  const target = document.getElementById('spec-image');\n  let selected = [\n    style || \"court\",\n    metal || \"yellow-gold\",\n    width || \"4mm\"\n  ];\n\n  target.src = imageUrl(selected.join(\"-\"));\n  target.srcset = \"\";\n}\n\nconst imageUrl = (key) => {\n  return \"/wp-content/uploads/2020/08/\" + key + \".jpg\";\n}\n\nconst updateSpec = () => {\n  const carat = fields[selections.carat]?.value;\n  const metal = fields[selections.metal]?.value;\n  const style = fields[selections.style]?.value;\n  const width = fields[selections.width]?.value;\n\n  setSpecText(carat, metal, style, width);\n  setSpecImage(metal, style, width);\n}\n\n// Initially, the URL is invalid and so we just link to '#'.\nlet url = '#';\n\n// Entrypoint for the product chooser logic\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  [...document.getElementsByClassName('ring-attribute-selector')].forEach((selector) => {\n    selector.onclick = () => {\n      updateUrlData(selector);\n      updateImages();\n    }\n  });\n\n  [...document.getElementsByClassName('next-button')].forEach((btn) => {\n    btn.onclick = (event) => {\n      // Avoid page refresh\n      event.preventDefault();\n\n      skipToNextSection(event);\n    };\n  });\n\n  initialHide();\n  setHiddenOptions();\n  assembleUrl();\n});\n"]}