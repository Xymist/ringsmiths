{"version":3,"sources":["fields.json","title_case.js","product_chooser.js"],"names":["module","exports","field","value","excl_attrs","metal","excl_fields","width","carat","titleCase","option","words","split","forEach","word","toUpperCase","slice","toLowerCase","join","selections","defaultSelections","ring_type","style","field_pfx","Object","keys","fields","reduce","tally","field_name","field_id","assembleUrl","arr","filter","Boolean","url","setHiddenOptions","selected","excluded","entry","push","Set","flat","elem","document","getElementById","hidden","includes","excluded_pfx","pfx","section","updateUrlData","elem_details","id","affected_field","undefined","attrib","excl","setFinaliseUrl","validUrl","res","key","associated_section","btn","href","getImageSrc","imageUrl","updateImageSrc","elem_image","img_src","src","srcset","updateImages","getElementsByClassName","selector","skipToNextSection","event","target","current_section","closest","display","next_section","nextElementSibling","initialHide","sects","setSpecText","innerHTML","setSpecImage","updateSpec","resetChooser","addEventListener","onclick","preventDefault"],"mappings":"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","file":"product_chooser.js","sourceRoot":"../src","sourcesContent":["module.exports={\"ring-plain\":{field:\"ring_type\",value:\"plain-shaped\"},\"ring-diamond\":{field:\"ring_type\",value:\"gem-set\"},\"carat-9\":{field:\"carat\",value:\"9ct\",excl_attrs:{metal:[\"titanium\",\"platinum\"]},excl_fields:[\"metal-titanium\",\"metal-platinum\"]},\"carat-18\":{field:\"carat\",value:\"18ct\",excl_attrs:{metal:[\"titanium\",\"platinum\"]},excl_fields:[\"metal-titanium\",\"metal-platinum\"]},\"style-flat\":{field:\"style\",value:\"flat\"},\"style-easyfit\":{field:\"style\",value:\"easy-fit\"},\"style-court\":{field:\"style\",value:\"court\"},\"style-dshape\":{field:\"style\",value:\"d-shape\"},\"width-2\":{field:\"width\",value:\"2mm\",excl_attrs:{metal:[\"titanium\"]},excl_fields:[\"metal-titanium\"]},\"width-2.5\":{field:\"width\",value:\"2-5mm\",excl_attrs:{metal:[\"rose-gold\",\"titanium\"]},excl_fields:[\"metal-titanium\",\"metal-rosegold\"]},\"width-3\":{field:\"width\",value:\"3mm\",excl_attrs:{metal:[\"titanium\"]},excl_fields:[\"metal-titanium\"]},\"width-4\":{field:\"width\",value:\"4mm\"},\"width-5\":{field:\"width\",value:\"5mm\"},\"width-6\":{field:\"width\",value:\"6mm\",excl_attrs:{metal:[\"rose-gold\"]},excl_fields:[\"metal-rosegold\"]},\"width-8\":{field:\"width\",value:\"8mm\",excl_attrs:{metal:[\"rose-gold\"]},excl_fields:[\"metal-rosegold\"]},\"metal-yellowgold\":{field:\"metal\",value:\"yellow-gold\"},\"metal-rosegold\":{field:\"metal\",value:\"rose-gold\",excl_attrs:{width:[\"6mm\",\"8mm\",\"2.5mm\"]},excl_fields:[\"width-6\",\"width-8\",\"width-2.5\"]},\"metal-whitegold\":{field:\"metal\",value:\"white-gold\"},\"metal-platinum\":{field:\"metal\",value:\"platinum\",excl_attrs:{carat:[\"9ct\",\"18ct\"]},excl_fields:[\"carat-9\",\"carat-18\"]},\"metal-titanium\":{field:\"metal\",value:\"titanium\",excl_attrs:{width:[\"2mm\",\"2.5mm\",\"3mm\"],carat:[\"9ct\",\"18ct\"]},excl_fields:[\"carat-9\",\"carat-18\",\"width-2\",\"width-2.5\",\"width-3\"]}};","const titleCase = (option) => {\n  let words = option.split(\"-\");\n  words.forEach((word) => {\n    word = word[0].toUpperCase() + word.slice(1).toLowerCase();\n  });\n  return words.join(\" \");\n}\n\nexport { titleCase };\n","import fields from './fields.json';\nimport titleCase from './title_case.js';\n\n// Object representing the current state of selections\n// the user has made\nlet selections = defaultSelections();\n\nconst defaultSelections = () => {\n  return {\n    ring_type: \"ring-plain\",\n    carat: null,\n    width: null,\n    metal: null,\n    style: null,\n  };\n};\n\nconst field_pfx = Object.keys(fields).reduce((tally, field_name) => {\n  let field_id = field_name.split(\"-\")[0];\n  tally[field_id] = (tally[field_id] || 0) + 1;\n  return tally;\n}, {});\n\nconst assembleUrl = () => {\n  // Fetch the pieces we want from the selections object; anything we don't want\n  // will be null or undefined, and will be removed by the filter\n  let arr = [\n    fields[selections.carat]?.value,\n    fields[selections.width]?.value,\n    fields[selections.metal]?.value,\n    fields[selections.style]?.value,\n    \"wedding-ring\",\n  ].filter(Boolean)\n\n  // Construct the URL by joining the components\n  url = arr.join(\"-\")\n};\n\nconst setHiddenOptions = () => {\n  let selected = [\n    selections.carat,\n    selections.width,\n    selections.style,\n    selections.metal\n  ].filter(Boolean);\n  let excluded = []\n\n  // Push all excluded element ID sets\n  selected.forEach((entry) => { excluded.push(fields[entry][\"excl_fields\"]) })\n\n  // Deduplicate\n  excluded = new Set(excluded.flat().filter(Boolean));\n  excluded = [...excluded];\n\n  // Get the names of all the option fields\n  const available_fields = Object.keys(fields);\n\n  // Hide anything to exclude, reveal anything otherwise\n  available_fields.forEach((field_id) => {\n    let elem = document.getElementById(field_id);\n    if (elem) {\n      elem.hidden = excluded.includes(field_id);\n    };\n  });\n\n  const excluded_pfx = excluded.reduce((tally, field_name) => {\n    let field_id = field_name.split(\"-\")[0];\n    tally[field_id] = (tally[field_id] || 0) + 1;\n    return tally;\n  }, {});\n\n  Object.keys(selections).forEach((pfx) => {\n    let section = document.getElementById(pfx + '-option-section');\n    if (section) {\n      section.hidden = (excluded_pfx[pfx] === field_pfx[pfx]);\n    }\n  });\n};\n\nconst updateUrlData = (elem) => {\n  // Find the appropriate content in the appropriate map for this element\n  const elem_details = fields[elem.id]\n\n  // Fetch the field to update and the value to set it to\n  const affected_field = elem_details[\"field\"];\n\n  // Set attributes of selections object\n  if (selections[affected_field] === elem.id) {\n    selections[affected_field] = null;\n\n    // We don't need to un-null any other fields, since by deselecting an element\n    // we're always increasing the options available.\n  } else {\n    selections[affected_field] = elem.id;\n\n    // Erase attributes that are impossible (e.g. carat)\n    if (elem_details.excl_attrs !== undefined) {\n      Object.keys(selections).forEach((attrib) => {\n        const excl = elem_details.excl_fields\n\n        // If there are excl_attrs for this attribute, and the current selection for this attribute\n        // is in those excl_attrs, null that selection so it won't be included in the URL\n        if (excl !== undefined && excl.includes(selections[attrib])) {\n          selections[attrib] = null\n        }\n      });\n    }\n  };\n\n  setHiddenOptions();\n  assembleUrl();\n  setFinaliseUrl();\n};\n\nconst validUrl = () => {\n  let res = true;\n\n  Object.keys(selections).forEach((key) => {\n    let associated_section = document.getElementById(key + '-option-section');\n    // If the key is null but the section is not hidden,\n    // we're missing an attribute\n    if (!selections[key] && associated_section && !associated_section.hidden) {\n      res = false\n    };\n  });\n\n  return res\n};\n\n// The \"finalise\" button takes the user to the relevant product page\nconst setFinaliseUrl = () => {\n  let btn = document.getElementById('finalise_ring');\n\n  if (validUrl()) {\n    btn.href = \"/product/\" + url;\n  } else {\n    btn.href = \"#\";\n  };\n};\n\nconst getImageSrc = (elem) => {\n  // Find the appropriate content in the appropriate map for this element\n  const elem_details = fields[elem.id];\n\n  if (elem_details === undefined) {\n    return\n  }\n\n  // Fetch the field to update and the value to set it to\n  const affected_field = elem_details[\"field\"];\n\n  // Use the image which considers the rest of the current selection,\n  // with the value which this option would set overridden.\n  let selected = [\n    affected_field === \"style\" ? elem_details.value : (fields[selections.style]?.value || \"court\"),\n    affected_field === \"metal\" ? elem_details.value : (fields[selections.metal]?.value || \"yellow-gold\"),\n    affected_field === \"width\" ? elem_details.value : (fields[selections.width]?.value || \"4mm\")\n  ];\n\n  return imageUrl(selected.join(\"-\"));\n};\n\n// For a given element, fetch its child image and update the src attribute\nconst updateImageSrc = (elem) => {\n  const elem_image = document.getElementById(elem.id + \"-image\");\n  const img_src = getImageSrc(elem);\n\n  // Some things, such as the carat, don't have mutable images.\n  // For those, img_src will be blank, so the relevant image\n  // will not be updated.\n  if (elem_image && img_src) {\n    elem_image.src = img_src;\n    elem_image.srcset = \"\";\n  }\n}\n\n// Get all attribute selectors, find their images and update\n// them to use the latest selections or defaults.\nconst updateImages = () => {\n  [...document.getElementsByClassName('ring-attribute-selector')].forEach((selector) => {\n    updateImageSrc(selector);\n  })\n};\n\nconst skipToNextSection = (event) => {\n  // Do nothing if no selection has been made\n  if ([null, undefined].includes(selections[event.target.id.split(\"-\")[0]])) {\n    return\n  };\n\n  // Hide this section.\n  const current_section = event.target.closest(\".et_pb_section\")\n  current_section.style.display = \"none\";\n\n  // Open the next valid (i.e. not hidden) section.\n  let next_section = current_section.nextElementSibling\n  while (next_section.hidden) {\n    next_section = next_section.nextElementSibling\n  };\n  next_section.style.display = \"block\";\n}\n\nconst initialHide = () => {\n  let sects = Object.keys(selections);\n  sects.push(\"spec\");\n  sects.forEach((pfx) => {\n    let section = document.getElementById(pfx + '-option-section');\n    if ([null, undefined].includes(section)) {\n      return\n    }\n\n    section.style.display = (pfx === \"metal\") ? \"block\" : \"none\";\n  });\n}\n\nconst setSpecText = (carat, metal, style, width) => {\n  const target = document.getElementById('spec-text');\n  target.innerHTML = `Your chosen ring is a ${carat ? carat + ' ' : ''}${titleCase(metal)} ${titleCase(style)} wedding ring with a finger width of ${width}.`\n}\n\nconst setSpecImage = (metal, style, width) => {\n  const target = document.getElementById('spec-image');\n  let selected = [\n    style || \"court\",\n    metal || \"yellow-gold\",\n    width || \"4mm\"\n  ];\n\n  target.src = imageUrl(selected.join(\"-\"));\n  target.srcset = \"\";\n}\n\nconst imageUrl = (key) => {\n  return \"/wp-content/uploads/2020/08/\" + key + \".jpg\";\n}\n\nconst updateSpec = () => {\n  const carat = fields[selections.carat]?.value;\n  const metal = fields[selections.metal]?.value;\n  const style = fields[selections.style]?.value;\n  const width = fields[selections.width]?.value;\n\n  setSpecText(carat, metal, style, width);\n  setSpecImage(metal, style, width);\n}\n\nconst resetChooser = () => {\n  selections = defaultSelections();\n  initialHide();\n  setHiddenOptions();\n  assembleUrl();\n}\n\n// Initially, the URL is invalid and so we just link to '#'.\nlet url = '#';\n\n// Entrypoint for the product chooser logic\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  [...document.getElementsByClassName('ring-attribute-selector')].forEach((selector) => {\n    selector.onclick = () => {\n      updateUrlData(selector);\n      updateImages();\n      updateSpec();\n    }\n  });\n\n  [...document.getElementsByClassName('next-button')].forEach((btn) => {\n    btn.onclick = (event) => {\n      event.preventDefault();\n      skipToNextSection(event);\n    };\n  });\n\n  [...document.getElementsByClassName('reset-button')].forEach((btn) => {\n    btn.onclick = (event) => {\n      event.preventDefault();\n      resetChooser();\n    };\n  });\n\n  resetChooser();\n});\n"]}