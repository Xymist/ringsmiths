{"version":3,"sources":["fields.json","title_case.js","siblings.js","product_chooser.js"],"names":["module","exports","field","value","excl_attrs","metal","excl_fields","width","carat","titleCase","option","words","split","forEach","word","idx","wds","toUpperCase","slice","toLowerCase","join","allSiblings","elem","match_class","sibling","siblings","parentNode","firstChild","classList","includes","push","nextSibling","deselectSiblings","remove","selections","defaultSelections","ring_type","style","field_pfx","Object","keys","fields","reduce","tally","field_name","field_id","assembleUrl","arr","filter","Boolean","url","setHiddenOptions","selected","excluded","entry","Set","flat","document","getElementById","hidden","excluded_pfx","pfx","section","updateUrlData","elem_details","id","affected_field","undefined","attrib","excl","setFinaliseUrl","validUrl","res","key","associated_section","btn","href","getImageSrc","imageUrl","updateImageSrc","elem_image","img_src","src","srcset","updateImages","getElementsByClassName","selector","skipToNextSection","event","target","current_section","closest","display","next_section","nextElementSibling","initialHide","sects","setSpecText","innerHTML","setSpecImage","updateSpec","resetChooser","setSelected","add","addEventListener","onclick","preventDefault"],"mappings":";AAAAA,OAAOC,QAAQ,CAAc,aAAA,CAACC,MAAM,YAAYC,MAAM,gBAA+B,eAAA,CAACD,MAAM,YAAYC,MAAM,WAAqB,UAAA,CAACD,MAAM,QAAQC,MAAM,MAAMC,WAAW,CAACC,MAAM,CAAC,WAAW,aAAaC,YAAY,CAAC,iBAAiB,mBAA8B,WAAA,CAACJ,MAAM,QAAQC,MAAM,OAAOC,WAAW,CAACC,MAAM,CAAC,WAAW,aAAaC,YAAY,CAAC,iBAAiB,mBAAgC,aAAA,CAACJ,MAAM,QAAQC,MAAM,QAAwB,gBAAA,CAACD,MAAM,QAAQC,MAAM,YAA0B,cAAA,CAACD,MAAM,QAAQC,MAAM,SAAwB,eAAA,CAACD,MAAM,QAAQC,MAAM,WAAqB,UAAA,CAACD,MAAM,QAAQC,MAAM,MAAMC,WAAW,CAACC,MAAM,CAAC,aAAaC,YAAY,CAAC,mBAA+B,YAAA,CAACJ,MAAM,QAAQC,MAAM,QAAQC,WAAW,CAACC,MAAM,CAAC,YAAY,aAAaC,YAAY,CAAC,iBAAiB,mBAA6B,UAAA,CAACJ,MAAM,QAAQC,MAAM,MAAMC,WAAW,CAACC,MAAM,CAAC,aAAaC,YAAY,CAAC,mBAA6B,UAAA,CAACJ,MAAM,QAAQC,MAAM,OAAiB,UAAA,CAACD,MAAM,QAAQC,MAAM,OAAiB,UAAA,CAACD,MAAM,QAAQC,MAAM,MAAMC,WAAW,CAACC,MAAM,CAAC,cAAcC,YAAY,CAAC,mBAA6B,UAAA,CAACJ,MAAM,QAAQC,MAAM,MAAMC,WAAW,CAACC,MAAM,CAAC,cAAcC,YAAY,CAAC,mBAAsC,mBAAA,CAACJ,MAAM,QAAQC,MAAM,eAAgC,iBAAA,CAACD,MAAM,QAAQC,MAAM,YAAYC,WAAW,CAACG,MAAM,CAAC,MAAM,MAAM,UAAUD,YAAY,CAAC,UAAU,UAAU,cAAgC,kBAAA,CAACJ,MAAM,QAAQC,MAAM,cAA+B,iBAAA,CAACD,MAAM,QAAQC,MAAM,WAAWC,WAAW,CAACI,MAAM,CAAC,MAAM,SAASF,YAAY,CAAC,UAAU,aAA8B,iBAAA,CAACJ,MAAM,QAAQC,MAAM,WAAWC,WAAW,CAACG,MAAM,CAAC,MAAM,QAAQ,OAAOC,MAAM,CAAC,MAAM,SAASF,YAAY,CAAC,UAAU,WAAW,UAAU,YAAY;;ACA/qD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAAA,IAAMG,EAAY,SAACC,GACbC,IAAAA,EAAQD,EAAOE,MAAM,KAIlBD,OAHPA,EAAME,QAAQ,SAACC,EAAMC,EAAKC,GACxBA,EAAID,GAAOD,EAAK,GAAGG,cAAgBH,EAAKI,MAAM,GAAGC,gBAE5CR,EAAMS,KAAK,MALpB,QAAA,UAAA;;ACcA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,QAAA,iBAAA,EAdA,IAAMC,EAAc,SAACC,EAAMC,GAIlBC,IAHHC,IAAAA,EAAW,GACXD,EAAUF,EAAKI,WAAWC,WAEvBH,GACDA,EAAQI,UAAUC,SAASN,IAAgBC,IAAYF,GACzDG,EAASK,KAAKN,GAEhBA,EAAUA,EAAQO,YAGbN,OAAAA,GAGT,QAAA,YAAA,EAAA,IAAMO,EAAmB,SAACV,GAGjBE,IAFHA,IAAAA,EAAUF,EAAKI,WAAWC,WAEvBH,GACDA,EAAQI,UAAUC,SAAS,mBAAqBL,IAAYF,GAC9DG,SAASG,UAAUK,OAAO,kBAE5BT,EAAUA,EAAQO,aAPtB,QAAA,iBAAA;;ACyPA,aAvQA,IAAA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,oBACA,EAAA,EAAA,QAAA,kBAqQA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjQA,IAAIG,EAAaC,IAEXA,EAAoB,WACjB,MAAA,CACLC,UAAW,aACX5B,MAAO,KACPD,MAAO,KACPF,MAAO,KACPgC,MAAO,OAILC,EAAYC,OAAOC,KAAKC,EAAZ,SAAoBC,OAAO,SAACC,EAAOC,GAC/CC,IAAAA,EAAWD,EAAWhC,MAAM,KAAK,GAE9B+B,OADPA,EAAME,IAAaF,EAAME,IAAa,GAAK,EACpCF,GACN,IAEGG,EAAc,WAAM,IAAA,EAAA,EAAA,EAAA,EAGpBC,EAAM,CACR,QAAAN,EAAAA,EAAOP,QAAAA,EAAW1B,cAAlB,IAAA,OAAA,EAAA,EAA0BL,MAC1B,QAAAsC,EAAAA,EAAOP,QAAAA,EAAW3B,cAAlB,IAAA,OAAA,EAAA,EAA0BJ,MAC1B,QAAAsC,EAAAA,EAAOP,QAAAA,EAAW7B,cAAlB,IAAA,OAAA,EAAA,EAA0BF,MAC1B,QAAAsC,EAAAA,EAAOP,QAAAA,EAAWG,cAAlB,IAAA,OAAA,EAAA,EAA0BlC,MAC1B,gBACA6C,OAAOC,SAGTC,EAAMH,EAAI3B,KAAK,MAGX+B,EAAmB,WACnBC,IAAAA,EAAW,CACblB,EAAW1B,MACX0B,EAAW3B,MACX2B,EAAWG,MACXH,EAAW7B,OACX2C,OAAOC,SACLI,EAAW,GAGfD,EAASvC,QAAQ,SAACyC,GAAYD,EAASvB,KAAKW,EAAOa,QAAAA,GAAP,eAI5CD,EAAeA,EADfA,EAAW,IAAIE,IAAIF,EAASG,OAAOR,OAAOC,WAIjBV,OAAOC,KAAKC,EAAZ,SAGR5B,QAAQ,SAACgC,GACpBvB,IAAAA,EAAOmC,SAASC,eAAeb,GAC/BvB,IACFA,EAAKqC,OAASN,EAASxB,SAASgB,MAI9Be,IAAAA,EAAeP,EAASX,OAAO,SAACC,EAAOC,GACvCC,IAAAA,EAAWD,EAAWhC,MAAM,KAAK,GAE9B+B,OADPA,EAAME,IAAaF,EAAME,IAAa,GAAK,EACpCF,GACN,IAEHJ,OAAOC,KAAKN,GAAYrB,QAAQ,SAACgD,GAC3BC,IAAAA,EAAUL,SAASC,eAAeG,EAAM,mBACxCC,IACFA,EAAQH,OAAUC,EAAaC,KAASvB,EAAUuB,OAKlDE,EAAgB,SAACzC,GAEf0C,IAAAA,EAAevB,EAAOnB,QAAAA,EAAK2C,IAG3BC,EAAiBF,EAAY,MAG/B9B,EAAWgC,KAAoB5C,EAAK2C,GACtC/B,EAAWgC,GAAkB,MAK7BhC,EAAWgC,GAAkB5C,EAAK2C,QAGFE,IAA5BH,EAAa5D,YACfmC,OAAOC,KAAKN,GAAYrB,QAAQ,SAACuD,GACzBC,IAAAA,EAAOL,EAAa1D,iBAIb6D,IAATE,GAAsBA,EAAKxC,SAASK,EAAWkC,MACjDlC,EAAWkC,GAAU,SAM7BjB,IACAL,IACAwB,KAGIC,EAAW,WACXC,IAAAA,GAAM,EAWHA,OATPjC,OAAOC,KAAKN,GAAYrB,QAAQ,SAAC4D,GAC3BC,IAAAA,EAAqBjB,SAASC,eAAee,EAAM,mBAGlDvC,EAAWuC,KAAQC,GAAuBA,EAAmBf,SAChEa,GAAM,KAIHA,GAIHF,EAAiB,WACjBK,IAAAA,EAAMlB,SAASC,eAAe,iBAE9Ba,IACFI,EAAIC,KAAO,YAAc1B,EAEzByB,EAAIC,KAAO,KAITC,EAAc,SAACvD,GAAS,IAAA,EAAA,EAAA,EAEtB0C,EAAevB,EAAOnB,QAAAA,EAAK2C,IAE7BD,QAAiBG,IAAjBH,EAAAA,CAKEE,IAAAA,EAAiBF,EAAY,MAI/BZ,EAAW,CACM,UAAnBc,EAA6BF,EAAa7D,OAAmCA,QAAnB+B,EAAAA,EAAAA,QAAAA,EAAWG,cAAQlC,IAAAA,OAAAA,EAAAA,EAAAA,QAAS,QACnE,UAAnB+D,EAA6BF,EAAa7D,OAAmCA,QAAnB+B,EAAAA,EAAAA,QAAAA,EAAW7B,cAAQF,IAAAA,OAAAA,EAAAA,EAAAA,QAAS,cACnE,UAAnB+D,EAA6BF,EAAa7D,OAAmCA,QAAnB+B,EAAAA,EAAAA,QAAAA,EAAW3B,cAAQJ,IAAAA,OAAAA,EAAAA,EAAAA,QAAS,OAGjF2E,OAAAA,EAAS1B,EAAShC,KAAK,QAI1B2D,EAAiB,SAACzD,GAChB0D,IAAAA,EAAavB,SAASC,eAAepC,EAAK2C,GAAK,UAC/CgB,EAAUJ,EAAYvD,GAKxB0D,GAAcC,IAChBD,EAAWE,IAAMD,EACjBD,EAAWG,OAAS,KAMlBC,EAAe,WACf3B,EAAAA,SAAS4B,uBAAuB,4BAA4BxE,QAAQ,SAACyE,GACvEP,EAAeO,MAIbC,EAAoB,SAACC,GAErB,IAAA,CAAC,UAAMrB,GAAWtC,SAASK,EAAWsD,EAAMC,OAAOxB,GAAGrD,MAAM,KAAK,KAAjE,CAKE8E,IAAAA,EAAkBF,EAAMC,OAAOE,QAAQ,kBAC7CD,EAAgBrD,MAAMuD,QAAU,OAIzBC,IADHA,IAAAA,EAAeH,EAAgBI,mBAC5BD,EAAalC,QAClBkC,EAAeA,EAAaC,mBAE9BD,EAAaxD,MAAMuD,QAAU,UAGzBG,EAAc,WACdC,IAAAA,EAAQzD,OAAOC,KAAKN,GACxB8D,EAAMlE,KAAK,QACXkE,EAAMnF,QAAQ,SAACgD,GACTC,IAAAA,EAAUL,SAASC,eAAeG,EAAM,mBACxC,CAAC,UAAMM,GAAWtC,SAASiC,KAI/BA,EAAQzB,MAAMuD,QAAmB,UAAR/B,EAAmB,QAAU,WAIpDoC,EAAc,SAACzF,EAAOH,EAAOgC,EAAO9B,GACzBkD,SAASC,eAAe,aAChCwC,UAAqC1F,yBAAAA,OAAAA,EAAQA,EAAQ,IAAM,IAAK,QAAA,EAAUH,EAAAA,SAAAA,GAAU,KAAA,QAAA,EAAUgC,EAAAA,SAAAA,GAA8C9B,yCAAAA,OAAAA,EAAnJ,MAGI4F,EAAe,SAAC9F,EAAOgC,EAAO9B,GAC5BkF,IAAAA,EAAShC,SAASC,eAAe,cACnCN,EAAW,CACbf,GAAS,QACThC,GAAS,cACTE,GAAS,OAGXkF,EAAOP,IAAMJ,EAAS1B,EAAShC,KAAK,MACpCqE,EAAON,OAAS,IAGZL,EAAW,SAACL,GACT,MAAA,+BAAiCA,EAAM,QAG1C2B,EAAa,WAAM,IAAA,EAAA,EAAA,EAAA,EACjB5F,EAAQ,QAAAiC,EAAAA,EAAOP,QAAAA,EAAW1B,cAAlB,IAAA,OAAA,EAAA,EAA0BL,MAClCE,EAAQ,QAAAoC,EAAAA,EAAOP,QAAAA,EAAW7B,cAAlB,IAAA,OAAA,EAAA,EAA0BF,MAClCkC,EAAQ,QAAAI,EAAAA,EAAOP,QAAAA,EAAWG,cAAlB,IAAA,OAAA,EAAA,EAA0BlC,MAClCI,EAAQ,QAAAkC,EAAAA,EAAOP,QAAAA,EAAW3B,cAAlB,IAAA,OAAA,EAAA,EAA0BJ,MAExC8F,EAAYzF,EAAOH,EAAOgC,EAAO9B,GACjC4F,EAAa9F,EAAOgC,EAAO9B,IAGvB8F,EAAe,WACnBnE,EAAaC,IACb4D,IACA5C,IACAL,KAGIwD,EAAc,SAAChF,GACnBA,EAAKM,UAAU2E,IAAI,mBACFjF,EAAAA,EAAAA,SAAAA,IAIf4B,EAAM,IAGVO,SAAS+C,iBAAiB,mBAAoB,WACxC/C,EAAAA,SAAS4B,uBAAuB,4BAA4BxE,QAAQ,SAACyE,GACvEA,EAASmB,QAAU,WACjBH,EAAYhB,GACZvB,EAAcuB,GACdF,IACAgB,OAIA3C,EAAAA,SAAS4B,uBAAuB,gBAAgBxE,QAAQ,SAAC8D,GAC3DA,EAAI8B,QAAU,SAACjB,GACbA,EAAMkB,iBACNnB,EAAkBC,MAIlB/B,EAAAA,SAAS4B,uBAAuB,iBAAiBxE,QAAQ,SAAC8D,GAC5DA,EAAI8B,QAAU,SAACjB,GACbA,EAAMkB,iBACNL,OAIJA","file":"product_chooser.js","sourceRoot":"../src","sourcesContent":["module.exports={\"ring-plain\":{field:\"ring_type\",value:\"plain-shaped\"},\"ring-diamond\":{field:\"ring_type\",value:\"gem-set\"},\"carat-9\":{field:\"carat\",value:\"9ct\",excl_attrs:{metal:[\"titanium\",\"platinum\"]},excl_fields:[\"metal-titanium\",\"metal-platinum\"]},\"carat-18\":{field:\"carat\",value:\"18ct\",excl_attrs:{metal:[\"titanium\",\"platinum\"]},excl_fields:[\"metal-titanium\",\"metal-platinum\"]},\"style-flat\":{field:\"style\",value:\"flat\"},\"style-easyfit\":{field:\"style\",value:\"easy-fit\"},\"style-court\":{field:\"style\",value:\"court\"},\"style-dshape\":{field:\"style\",value:\"d-shape\"},\"width-2\":{field:\"width\",value:\"2mm\",excl_attrs:{metal:[\"titanium\"]},excl_fields:[\"metal-titanium\"]},\"width-2.5\":{field:\"width\",value:\"2-5mm\",excl_attrs:{metal:[\"rose-gold\",\"titanium\"]},excl_fields:[\"metal-titanium\",\"metal-rosegold\"]},\"width-3\":{field:\"width\",value:\"3mm\",excl_attrs:{metal:[\"titanium\"]},excl_fields:[\"metal-titanium\"]},\"width-4\":{field:\"width\",value:\"4mm\"},\"width-5\":{field:\"width\",value:\"5mm\"},\"width-6\":{field:\"width\",value:\"6mm\",excl_attrs:{metal:[\"rose-gold\"]},excl_fields:[\"metal-rosegold\"]},\"width-8\":{field:\"width\",value:\"8mm\",excl_attrs:{metal:[\"rose-gold\"]},excl_fields:[\"metal-rosegold\"]},\"metal-yellowgold\":{field:\"metal\",value:\"yellow-gold\"},\"metal-rosegold\":{field:\"metal\",value:\"rose-gold\",excl_attrs:{width:[\"6mm\",\"8mm\",\"2.5mm\"]},excl_fields:[\"width-6\",\"width-8\",\"width-2.5\"]},\"metal-whitegold\":{field:\"metal\",value:\"white-gold\"},\"metal-platinum\":{field:\"metal\",value:\"platinum\",excl_attrs:{carat:[\"9ct\",\"18ct\"]},excl_fields:[\"carat-9\",\"carat-18\"]},\"metal-titanium\":{field:\"metal\",value:\"titanium\",excl_attrs:{width:[\"2mm\",\"2.5mm\",\"3mm\"],carat:[\"9ct\",\"18ct\"]},excl_fields:[\"carat-9\",\"carat-18\",\"width-2\",\"width-2.5\",\"width-3\"]}};","const titleCase = (option) => {\n  let words = option.split(\"-\");\n  words.forEach((word, idx, wds) => {\n    wds[idx] = word[0].toUpperCase() + word.slice(1).toLowerCase();\n  });\n  return words.join(\" \");\n}\n\nexport { titleCase };\n","const allSiblings = (elem, match_class) => {\n  let siblings = [];\n  let sibling = elem.parentNode.firstChild;\n\n  while (sibling) {\n    if (sibling.classList.includes(match_class) && sibling !== elem) {\n      siblings.push(sibling);\n    }\n    sibling = sibling.nextSibling\n  }\n\n  return siblings;\n};\n\nconst deselectSiblings = (elem) => {\n  let sibling = elem.parentNode.firstChild;\n\n  while (sibling) {\n    if (sibling.classList.includes('selectedOption') && sibling !== elem) {\n      siblings.classList.remove('selectedOption');\n    }\n    sibling = sibling.nextSibling\n  }\n}\n\nexport { allSiblings, deselectSiblings };\n","import fields from './fields.json';\nimport titleCase from './title_case.js';\nimport deselectSiblings from './siblings.js'\n\n// Object representing the current state of selections\n// the user has made\nlet selections = defaultSelections();\n\nconst defaultSelections = () => {\n  return {\n    ring_type: \"ring-plain\",\n    carat: null,\n    width: null,\n    metal: null,\n    style: null,\n  };\n};\n\nconst field_pfx = Object.keys(fields).reduce((tally, field_name) => {\n  let field_id = field_name.split(\"-\")[0];\n  tally[field_id] = (tally[field_id] || 0) + 1;\n  return tally;\n}, {});\n\nconst assembleUrl = () => {\n  // Fetch the pieces we want from the selections object; anything we don't want\n  // will be null or undefined, and will be removed by the filter\n  let arr = [\n    fields[selections.carat]?.value,\n    fields[selections.width]?.value,\n    fields[selections.metal]?.value,\n    fields[selections.style]?.value,\n    \"wedding-ring\",\n  ].filter(Boolean)\n\n  // Construct the URL by joining the components\n  url = arr.join(\"-\")\n};\n\nconst setHiddenOptions = () => {\n  let selected = [\n    selections.carat,\n    selections.width,\n    selections.style,\n    selections.metal\n  ].filter(Boolean);\n  let excluded = []\n\n  // Push all excluded element ID sets\n  selected.forEach((entry) => { excluded.push(fields[entry][\"excl_fields\"]) })\n\n  // Deduplicate\n  excluded = new Set(excluded.flat().filter(Boolean));\n  excluded = [...excluded];\n\n  // Get the names of all the option fields\n  const available_fields = Object.keys(fields);\n\n  // Hide anything to exclude, reveal anything otherwise\n  available_fields.forEach((field_id) => {\n    let elem = document.getElementById(field_id);\n    if (elem) {\n      elem.hidden = excluded.includes(field_id);\n    };\n  });\n\n  const excluded_pfx = excluded.reduce((tally, field_name) => {\n    let field_id = field_name.split(\"-\")[0];\n    tally[field_id] = (tally[field_id] || 0) + 1;\n    return tally;\n  }, {});\n\n  Object.keys(selections).forEach((pfx) => {\n    let section = document.getElementById(pfx + '-option-section');\n    if (section) {\n      section.hidden = (excluded_pfx[pfx] === field_pfx[pfx]);\n    }\n  });\n};\n\nconst updateUrlData = (elem) => {\n  // Find the appropriate content in the appropriate map for this element\n  const elem_details = fields[elem.id]\n\n  // Fetch the field to update and the value to set it to\n  const affected_field = elem_details[\"field\"];\n\n  // Set attributes of selections object\n  if (selections[affected_field] === elem.id) {\n    selections[affected_field] = null;\n\n    // We don't need to un-null any other fields, since by deselecting an element\n    // we're always increasing the options available.\n  } else {\n    selections[affected_field] = elem.id;\n\n    // Erase attributes that are impossible (e.g. carat)\n    if (elem_details.excl_attrs !== undefined) {\n      Object.keys(selections).forEach((attrib) => {\n        const excl = elem_details.excl_fields\n\n        // If there are excl_attrs for this attribute, and the current selection for this attribute\n        // is in those excl_attrs, null that selection so it won't be included in the URL\n        if (excl !== undefined && excl.includes(selections[attrib])) {\n          selections[attrib] = null\n        }\n      });\n    }\n  };\n\n  setHiddenOptions();\n  assembleUrl();\n  setFinaliseUrl();\n};\n\nconst validUrl = () => {\n  let res = true;\n\n  Object.keys(selections).forEach((key) => {\n    let associated_section = document.getElementById(key + '-option-section');\n    // If the key is null but the section is not hidden,\n    // we're missing an attribute\n    if (!selections[key] && associated_section && !associated_section.hidden) {\n      res = false\n    };\n  });\n\n  return res\n};\n\n// The \"finalise\" button takes the user to the relevant product page\nconst setFinaliseUrl = () => {\n  let btn = document.getElementById('finalise_ring');\n\n  if (validUrl()) {\n    btn.href = \"/product/\" + url;\n  } else {\n    btn.href = \"#\";\n  };\n};\n\nconst getImageSrc = (elem) => {\n  // Find the appropriate content in the appropriate map for this element\n  const elem_details = fields[elem.id];\n\n  if (elem_details === undefined) {\n    return\n  }\n\n  // Fetch the field to update and the value to set it to\n  const affected_field = elem_details[\"field\"];\n\n  // Use the image which considers the rest of the current selection,\n  // with the value which this option would set overridden.\n  let selected = [\n    affected_field === \"style\" ? elem_details.value : (fields[selections.style]?.value || \"court\"),\n    affected_field === \"metal\" ? elem_details.value : (fields[selections.metal]?.value || \"yellow-gold\"),\n    affected_field === \"width\" ? elem_details.value : (fields[selections.width]?.value || \"4mm\")\n  ];\n\n  return imageUrl(selected.join(\"-\"));\n};\n\n// For a given element, fetch its child image and update the src attribute\nconst updateImageSrc = (elem) => {\n  const elem_image = document.getElementById(elem.id + \"-image\");\n  const img_src = getImageSrc(elem);\n\n  // Some things, such as the carat, don't have mutable images.\n  // For those, img_src will be blank, so the relevant image\n  // will not be updated.\n  if (elem_image && img_src) {\n    elem_image.src = img_src;\n    elem_image.srcset = \"\";\n  }\n};\n\n// Get all attribute selectors, find their images and update\n// them to use the latest selections or defaults.\nconst updateImages = () => {\n  [...document.getElementsByClassName('ring-attribute-selector')].forEach((selector) => {\n    updateImageSrc(selector);\n  })\n};\n\nconst skipToNextSection = (event) => {\n  // Do nothing if no selection has been made\n  if ([null, undefined].includes(selections[event.target.id.split(\"-\")[0]])) {\n    return\n  };\n\n  // Hide this section.\n  const current_section = event.target.closest(\".et_pb_section\")\n  current_section.style.display = \"none\";\n\n  // Open the next valid (i.e. not hidden) section.\n  let next_section = current_section.nextElementSibling\n  while (next_section.hidden) {\n    next_section = next_section.nextElementSibling\n  };\n  next_section.style.display = \"block\";\n};\n\nconst initialHide = () => {\n  let sects = Object.keys(selections);\n  sects.push(\"spec\");\n  sects.forEach((pfx) => {\n    let section = document.getElementById(pfx + '-option-section');\n    if ([null, undefined].includes(section)) {\n      return\n    }\n\n    section.style.display = (pfx === \"metal\") ? \"block\" : \"none\";\n  });\n};\n\nconst setSpecText = (carat, metal, style, width) => {\n  const target = document.getElementById('spec-text');\n  target.innerHTML = `Your chosen ring is a ${carat ? carat + ' ' : ''}${titleCase(metal)} ${titleCase(style)} wedding ring with a finger width of ${width}.`\n}\n\nconst setSpecImage = (metal, style, width) => {\n  const target = document.getElementById('spec-image');\n  let selected = [\n    style || \"court\",\n    metal || \"yellow-gold\",\n    width || \"4mm\"\n  ];\n\n  target.src = imageUrl(selected.join(\"-\"));\n  target.srcset = \"\";\n};\n\nconst imageUrl = (key) => {\n  return \"/wp-content/uploads/2020/08/\" + key + \".jpg\";\n};\n\nconst updateSpec = () => {\n  const carat = fields[selections.carat]?.value;\n  const metal = fields[selections.metal]?.value;\n  const style = fields[selections.style]?.value;\n  const width = fields[selections.width]?.value;\n\n  setSpecText(carat, metal, style, width);\n  setSpecImage(metal, style, width);\n};\n\nconst resetChooser = () => {\n  selections = defaultSelections();\n  initialHide();\n  setHiddenOptions();\n  assembleUrl();\n};\n\nconst setSelected = (elem) => {\n  elem.classList.add('selectedOption');\n  deselectSiblings(elem);\n};\n\n// Initially, the URL is invalid and so we just link to '#'.\nlet url = '#';\n\n// Entrypoint for the product chooser logic\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  [...document.getElementsByClassName('ring-attribute-selector')].forEach((selector) => {\n    selector.onclick = () => {\n      setSelected(selector);\n      updateUrlData(selector);\n      updateImages();\n      updateSpec();\n    }\n  });\n\n  [...document.getElementsByClassName('next-button')].forEach((btn) => {\n    btn.onclick = (event) => {\n      event.preventDefault();\n      skipToNextSection(event);\n    };\n  });\n\n  [...document.getElementsByClassName('reset-button')].forEach((btn) => {\n    btn.onclick = (event) => {\n      event.preventDefault();\n      resetChooser();\n    };\n  });\n\n  resetChooser();\n});\n"]}